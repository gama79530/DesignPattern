@startuml example
hide empty members

abstract class PizzaStore{
    # {abstract} Pizza createPizza(PizzaType type, int radius)
    + Pizza orderPizza(PizzaType type, int radius)
}

class PizzaStoreA{
    # Pizza createPizza(PizzaType type, int radius)
    + Pizza orderPizza(PizzaType type, int radius)
}

class PizzaStoreB{
    # Pizza createPizza(PizzaType type, int radius)
    + Pizza orderPizza(PizzaType type, int radius)
}

enum PizzaType{
    + CHEESE_PIZZA
    + PEPPERONI_PIZZA
    + VEGGIE_PIZZA

    + String getInfo()
}

interface Pizza{
    + int getPrice()
    + int getRadius()
}

class CheesePizza{
    + CheesePizza(int radius)
    + int getPrice()
    + int getRadius()
}

class PepperoniPizza{
    + PepperoniPizza(int radius)
    + int getPrice()
    + int getRadius()
}

class VeggiePizza{
    + VeggiePizza(int radius)
    + int getPrice()
    + int getRadius()
}

PizzaStore <|-- PizzaStoreA
PizzaStore <|-- PizzaStoreB
Pizza <|-- CheesePizza
Pizza <|-- VeggiePizza
Pizza <|-- PepperoniPizza

PizzaStore - Pizza : > produce 

@enduml

